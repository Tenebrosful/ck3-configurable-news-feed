types NewsFeed {
    type newsfeed_root = widget {
        allow_outside = yes

        newsfeed_chocolate_feed = {
            visible = "[Not(GetVariableSystem.Exists('newsfeed_use_vanilla'))]"
        }

        newsfeed_vanilla_feed = {
            visible = "[GetVariableSystem.Exists('newsfeed_use_vanilla')]"
        }

        newsfeed_toolbar = {
            visible = "[GetVariableSystem.Exists('newsfeed_use_vanilla')]"
            position = { -10 -90 }
        }

        state = {
            name = newsfeed_initialize
            trigger_when = "[GetScriptedGui('newsfeed_ensure_settings_initialized_gui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
            on_start = "[GetScriptedGui('newsfeed_ensure_settings_initialized_gui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
        }

        state = {
            name = open_settings
            trigger_when = "[GetVariableSystem.Exists('newsfeed_settings_shown')]"
            on_start = "[ExecuteConsoleCommand('gui.CreateWidget gui/newsfeed_settings.gui newsfeed_settings_window')]"
        }

        state = {
            name = close_settings
            trigger_when = "[Not(GetVariableSystem.Exists('newsfeed_settings_shown'))]"
            on_start = "[ExecuteConsoleCommand('gui.ClearWidgets newsfeed_settings_window')]"
        }

        button = {
            name = "newsfeed_clear_hotkey"
            size = { 0 0 }
            shortcut = "army_split_half"
            onclick = "[GetScriptedGui('newsfeed_delete_all_messages_gui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
        }
    }   
}